import java.io.Console;
import java.util.*;
import java.util.Base64;

public class JogoPalavraEmbaralhada {
    private static final String SENHA_CIFRADA = "UG93ZGVyQXJjYW5l"; // Base64 da senha de dev

    public static void main(String[] args) {
        Console console = System.console();

        if (console == null) {
            System.out.println("N√£o foi poss√≠vel obter o Console. Certifique-se de executar o programa no terminal.");
            return;
        }

        exibirIntroducao();

        System.out.print("Voc√™ √© desenvolvedor? (s/n): ");
        String resposta = console.readLine().trim();

        if (resposta.equalsIgnoreCase("s")) {
            System.out.println("\nüîê Acesso restrito. Digite a senha de desenvolvedor:");
            String senhaDigitada = lerSenhaOculta(console);

            if (verificaSenha(senhaDigitada)) {
                System.out.println("\nüîì Acesso concedido! Lista de palavras reais:\n");
                exibirPalavrasReais();
                return;
            } else {
                System.out.println("‚ùå Senha incorreta. Acesso negado.");
                return;
            }
        }

        jogarComoUsuario(console);
    }

    public static void exibirIntroducao() {
        System.out.println("====================================");
        System.out.println("üî† JOGO DE PALAVRA EMBARALHADA");
        System.out.println("====================================\n");
        System.out.println("Descubra a palavra correta a partir de uma vers√£o embaralhada.");
        System.out.println("Voc√™ ter√° 6 tentativas para acertar.\n");
    }

    public static boolean verificaSenha(String senhaDigitada) {
        String senhaOriginal = new String(Base64.getDecoder().decode(SENHA_CIFRADA));
        return senhaDigitada.equals(senhaOriginal);
    }

    public static String embaralharPalavra(String palavra) {
        List<String> letras = Arrays.asList(palavra.split(""));
        Collections.shuffle(letras);
        return String.join("", letras);
    }

    public static List<String> getPalavrasCodificadas() {
        return Arrays.asList(
                "computador", "java", "programa", "teclado", "internet", "algoritmo",
                "estrutura", "modo", "viagem", "auto", "cliente", "servidor",
                "desta", "desafio", "morte", "premoni√ß√£o", "met√°fora", "escada",
                "senha", "paramodo", "protocolo", "mundo", "questao", "iniciativas",
                "distravo", "cascada", "cerno", "pervaco", "cata", "sistemade",
                "desenvolvedor", "rede", "computacao", "hardware", "software",
                "javascript", "python", "linguagem", "tecnologia", "inovacao"
        );
    }

    public static List<String> getPalavrasDecodificadas() {
        List<String> codificadas = getPalavrasCodificadas();
        List<String> decodificadas = new ArrayList<>();
        for (String cod : codificadas) {
            decodificadas.add(new StringBuilder(cod).reverse().toString());
        }
        return decodificadas;
    }

    public static String lerSenhaOculta(Console console) {
        // L√™ a senha de forma oculta usando o Console
        char[] senhaChars = console.readPassword("‚Üí ");
        return new String(senhaChars);
    }

    public static void exibirPalavrasReais() {
        List<String> lista = getPalavrasDecodificadas();
        for (String palavra : lista) {
            System.out.println("‚Üí " + palavra);
        }
        System.out.println("\n[Encerrando. Modo desenvolvedor apenas visualiza palavras.]");
    }

    public static void jogarComoUsuario(Console console) {
        Random random = new Random();
        List<String> palavras = getPalavrasDecodificadas();
        String palavraEscolhida = palavras.get(random.nextInt(palavras.size()));
        String palavraEmbaralhada = embaralharPalavra(palavraEscolhida);

        System.out.println("\nüåÄ Adivinhe a palavra embaralhada: " + palavraEmbaralhada);

        boolean acertou = false;
        int tentativas = 6;

        while (tentativas > 0) {
            System.out.print("Tentativa (" + tentativas + "): ");
            String tentativa = console.readLine().trim();

            if (tentativa.equalsIgnoreCase(palavraEscolhida)) {
                acertou = true;
                break;
            } else if (tentativa.isEmpty()) {
                System.out.println("‚ö†Ô∏è Entrada vazia. Tente novamente.");
                continue;
            }
            tentativas--;
        }

        if (acertou) {
            System.out.println("üéâ Parab√©ns! Voc√™ acertou!");
        } else {
            System.out.println("üíÄ Fim de jogo! A palavra correta era: " + palavraEscolhida);
        }

        System.out.println("\nObrigado por jogar!");
    }
}
